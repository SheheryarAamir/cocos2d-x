[cocos2d-x]
# the prefix to be added to the generated functions. You might or might not use this in your own
# templates
prefix = cocos2dx

# create a target namespace (in javascript, this would create some code like the equiv. to `ns = ns || {}`)
# all classes will be embedded in that namespace
target_namespace = cc

# extra arguments for clang
extra_arguments = -I../../cocos2dx/include -I../../cocos2dx/platform -I../../cocos2dx/platform/ios -I../../cocos2dx -I../../cocos2dx/kazmath/include -arch i386 -DTARGET_OS_IPHONE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.1.sdk -x c++

# what headers to parse
headers = ../../cocos2dx/include/cocos2d.h

# what classes to produce code for
classes = CCSprite CCScene CCNode CCDirector

# what should we skip? in the format ClassName::[function function]
skip = CCSprite::[updateBlendFunc setBlendFunc getQuad setColor displayFrame getOffsetPosition setReorderChildDirtyRecursively getTexture getSpriteBatchNode setTextureRect getBlendFunc initWithTexture getColor getTextureRect setTextureCoords initWithFile getTextureAtlas getQuadsetVertexRect setVertexRect setSpriteBatchNode],
		CCNode::[nodeToWorldTransform getUserObject unschedule schedule getShaderProgram getChildren detachChild scheduleOnce setZOrder convertToWindowSpace description childrenAlloc nodeToParentTransform getGrid setGLServerState runAction isScheduled getActionByTag getScheduler setContentSize insertChild getContentSize worldToNodeTransform parentToNodeTransform getCamera getActionManager],
		CCDirector::[showStats calculateDeltaTime reshapeProjection getOpenGLView updateContentScaleFactor setWatcherCallbackFun setProjection createStatsLabel getAccelerometer setNextScene calculateMPF getKeypadDispatcher purgeDirector getTouchDispatcher getScheduler getActionManager]

# for all class names, should we remove something when registering in the target VM?
remove_prefix = CC

# objects for which there will be no "parent" lookup
base_objects = CCNode CCDirector

# classes that create no constructor
abstract_classes = CCDirector

# do the classes have type info?
# ClassName::OBJECT_TYPE // ~> uint32_t
# classInstance->getObjectType() // ~> returns the ClassName::OBJECT_TYPE
# FIXME: this is not working yet and it's assuming all classes implement object type
classes_have_type_info = yes

[simple-audio-engine]
target_namespace = cc
prefix = sae
extra_arguments = -I../../cocos2dx/include -I../../cocos2dx/platform -I../../cocos2dx/platform/ios -I../../cocos2dx -I../../cocos2dx/kazmath/include -arch i386 -DTARGET_OS_IPHONE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.1.sdk -x c++
headers = ../../CocosDenshion/include/SimpleAudioEngine.h
classes = SimpleAudioEngine
skip =
remove_prefix =
base_objects = SimpleAudioEngine
abstract_classes = SimpleAudioEngine
classes_have_type_info = no

[test]
prefix = simple_test
extra_arguments = -Isimple_test -x c++
headers = simple_test/simple_class.h
classes = SimpleNativeClass
skip =
remove_prefix =
base_objects =
abstract_classes =
classes_have_type_info = no

